{"version":3,"file":"static/webpack/static/development/pages/overview.js.2c403f4b3535958cbbf1.hot-update.js","sources":["webpack:///./pages/overview/index.tsx"],"sourcesContent":["import React, { SFC, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\nimport { Pagination, Spin } from \"antd\";\nimport { Store, ArticleList } from \"@client/typings/store\";\nimport Preview from \"@client/components/Preview\";\nimport { fetchArticleList } from \"@client/redux/actions/article\";\nimport fetch from \"isomorphic-fetch\";\n\ninterface Props {\n  articleList: ArticleList;\n  fetchArticleList: typeof fetchArticleList;\n  res: any;\n}\n\ninterface Next {\n  getInitialProps: any;\n}\n\nconst Overview: SFC<Props> & Next = props => {\n  console.log(\"props2 :\", props);\n  // const [loading, setLoading] = useState(true);\n  const { articleList } = props;\n  const { total, data = [] } = articleList;\n\n  useEffect(() => {\n    const getArticles = async () => {\n      await props.fetchArticleList();\n    };\n    getArticles();\n    // setLoading(false);\n  }, []);\n\n  const toArticleDetail = (id: number) => {\n    Router.push(`/article?id=${id}`);\n  };\n\n  const pageChange = async (page: number) => {\n    await props.fetchArticleList(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <Spin spinning={false}>\n        {data.map((item, index) => (\n          <div key={`${item.title}${index}`}>\n            <Preview\n              id={item.id}\n              title={item.title}\n              content={item.content}\n              tags={item.tags}\n              time={item.updatedAt}\n              toDetail={toArticleDetail}\n            ></Preview>\n          </div>\n        ))}\n        <Pagination\n          pageSize={10}\n          defaultCurrent={1}\n          total={total}\n          onChange={page => pageChange(page)}\n        />\n      </Spin>\n      <style jsx>{`\n        .container {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          margin-top: 30px;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nOverview.getInitialProps = async () => {\n  console.log(\"进入initialProps :\");\n  // const res = await fetchArticleList();\n  const res = await fetch(\"http://127.0.0.1:3000/api/v1/article\", {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(r => {\n    console.log(\"r\", r);\n    return r.json();\n  });\n  console.log(\"res :\", res);\n  return { res };\n};\n\nexport default connect(\n  (state: Store) => ({\n    articleList: state.article.articleList\n  }),\n  { fetchArticleList }\n)(Overview);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAWA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAdA;AAAA;AAgCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAZA;AAGA;AASA;AAZA;AAaA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AADA;AAAA;AAGA;AAAA;;;;A","sourceRoot":""}